import { type NextPage } from "next";
import Head from "next/head";

import { api } from "~/utils/api";
import TopBar from "../components/TopBar";
import { useState } from "react";
import CreateModal from "~/components/CreateModal";
import Todo from "~/components/Todo";
import DeleteManyModal from "~/components/DeleteManyModal";

const Home: NextPage = () => {
  const [createModal, setCreateModal] = useState(false);
  const [deleteManyModal, setDeleteManyModal] = useState(false);
  const { data: todos, refetch: refetchTodos } = api.todo.getAll.useQuery(undefined);
  const createTodo = api.todo.create.useMutation({
    onSuccess: () => {
      void refetchTodos();
    }
  })
  const checkTodo = api.todo.toggleCheck.useMutation({
    onSuccess: () => {
      void refetchTodos();
    }
  })
  const deleteTodo = api.todo.delete.useMutation({
    onSuccess: () => {
      void refetchTodos();
    }
  })
  const toggleCreateModal = () => {
    setCreateModal(!createModal);
  }
  const toggleDeleteManyModal = () => {
    setDeleteManyModal(!deleteManyModal);
  }
  return (
    <>
      <Head>
        <title>SimpleTodo</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <TopBar toggleCreateModal={toggleCreateModal} toggleDeleteManyModal={toggleDeleteManyModal} />
      {createModal && <CreateModal toggleCreateModal={toggleCreateModal} create={({ todo }) => {
        void createTodo.mutate({ todo: todo })
      }} />}
      {deleteManyModal && <DeleteManyModal toggleDeleteManyModal={toggleDeleteManyModal} todos={todos} deleteTodo={({ todoId }) => {
        void deleteTodo.mutate({ id: todoId })
      }} />}
      <main className="w-screen max-w-5xl bg-rgb mx-auto flex gap-3 flex-col pt-12">
        {todos?.map((value, index) => {
          return <Todo todo={value.todo} checked={value.isChecked} key={index} id={value.id} check={({ todoId }) => {
            void checkTodo.mutate({ id: todoId });
          }} deleteTodo={({ todoId }) => {
            void deleteTodo.mutate({ id: todoId });
          }} />
        })}
      </main>
    </>
  );
};

export default Home;

